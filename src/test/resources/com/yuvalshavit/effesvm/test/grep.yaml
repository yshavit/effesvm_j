efct: |
  FUNC : main 1 1 0
  # We have two local args:
  # arg0 -> the pattern to look for
  # arg1 -> each stdin line as it comes in
  call_Stream:stdinLine
  svar 1
  pvar 1
  type False
  call_Boolean:negate
  goif 8                 # goif pattern != False
  int  1
  rtrn
  call_Stream:stdinLine  # jump point for if pattern != False
  svar 2
  pvar 2
  type False
  goif 23                # goif to exit point stdin == False
  pvar 2
  pvar 1
  call_String:regex
  type False
  goif 8                 # back to reading next stdin
  pvar 2
  call_String:sout
  str  \n
  call_String:sout
  goto 8                 # back to reading next stdin
  int 0                  # exit point (jump point for goif stdin == False, or
  rtrn
runs:
- description: match some
  in: |
    hello.*
    hello there
    this one is not matched
    hello this is
  out: |
    hello there
    hello this is
  exit: 0
- description: match none
  in: |
    hello
    how are you
  out: ''
  exit: 0
- description: only pattern provided
  in: |
    onlyThePattern
  out: ''
  exit: 0
- description: no stdin
  in: null
  exit: 1
